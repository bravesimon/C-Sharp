// <auto-generated />
using System;
using MechanicService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MechanicService.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    [Migration("20240602140241_Initial2")]
    partial class Initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MechanicService.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Information")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Road")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Gyal",
                            Country = "Hungary",
                            County = "Pest megye",
                            HouseNumber = 3,
                            Information = "",
                            PostalCode = "2360",
                            Road = "Bela utca"
                        },
                        new
                        {
                            Id = 2,
                            City = "Nyiregyhaza",
                            Country = "Hungary",
                            County = "Szabolcs-Szatmár-Bereg megye",
                            HouseNumber = 42,
                            Information = "B haz saroknal",
                            PostalCode = "4400",
                            Road = "Kossuth utca"
                        },
                        new
                        {
                            Id = 3,
                            City = "Kecskemét ",
                            Country = "Hungary",
                            County = "Bács-Kiskun megye",
                            HouseNumber = 2,
                            Information = "",
                            PostalCode = "6000",
                            Road = "Kövérszőlő utca"
                        });
                });

            modelBuilder.Entity("MechanicService.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Email = "asd@temp.com",
                            FirstMidName = "Akos",
                            LastName = "Budai",
                            PhoneNumber = "+36201234567"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Email = "asd2@temp.com",
                            FirstMidName = "Bela",
                            LastName = "Szervat",
                            PhoneNumber = "+36301234567"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            Email = "asd3@temp.com",
                            FirstMidName = "Ferenc",
                            LastName = "Kiss",
                            PhoneNumber = "+36701234567"
                        });
                });

            modelBuilder.Entity("MechanicService.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Information")
                        .HasColumnType("text");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<int>("ServiceHistoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ServiceHistoryId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2003, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "",
                            IsDone = true,
                            ServiceHistoryId = 0
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2004, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "",
                            IsDone = true,
                            ServiceHistoryId = 0
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2004, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "",
                            IsDone = true,
                            ServiceHistoryId = 0
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "",
                            IsDone = true,
                            ServiceHistoryId = 0
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "fek allitas lesz",
                            IsDone = false,
                            ServiceHistoryId = 0
                        });
                });

            modelBuilder.Entity("MechanicService.Models.ServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("ServiceHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServiceId = 1,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ServiceId = 2,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ServiceId = 3,
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 4,
                            ServiceId = 4,
                            VehicleId = 2
                        },
                        new
                        {
                            Id = 5,
                            ServiceId = 5,
                            VehicleId = 3
                        });
                });

            modelBuilder.Entity("MechanicService.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BoughtTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ClientID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsWarrantyActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientID");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoughtTime = new DateTime(2003, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 1,
                            IsWarrantyActive = false,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            BoughtTime = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 2,
                            IsWarrantyActive = true,
                            Type = 3
                        },
                        new
                        {
                            Id = 3,
                            BoughtTime = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientID = 3,
                            IsWarrantyActive = true,
                            Type = 2
                        });
                });

            modelBuilder.Entity("MechanicService.Models.Client", b =>
                {
                    b.HasOne("MechanicService.Models.Address", "Address")
                        .WithOne("Client")
                        .HasForeignKey("MechanicService.Models.Client", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MechanicService.Models.Service", b =>
                {
                    b.HasOne("MechanicService.Models.ServiceHistory", "ServiceHistory")
                        .WithMany("Services")
                        .HasForeignKey("ServiceHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceHistory");
                });

            modelBuilder.Entity("MechanicService.Models.ServiceHistory", b =>
                {
                    b.HasOne("MechanicService.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MechanicService.Models.Vehicle", b =>
                {
                    b.HasOne("MechanicService.Models.Client", "Client")
                        .WithMany("Vehicles")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("MechanicService.Models.Address", b =>
                {
                    b.Navigation("Client")
                        .IsRequired();
                });

            modelBuilder.Entity("MechanicService.Models.Client", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("MechanicService.Models.ServiceHistory", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
